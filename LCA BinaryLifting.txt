/*
Taken from https://github.com/anjn98/MyCodingLibrary
*/

const int l=30, maxn=1e5;
int up[maxn][l+2],tin[maxn],tout[maxn],timer;
void dfs(int v, int p)
{
    tin[v] = ++timer;
    up[v][0] = p;
    for (int i = 1; i <= l; ++i)
        up[v][i] = up[up[v][i-1]][i-1];

    for (auto u : g[v]) {
        if (u != p)
        dfs(u, v);
    }
    tout[v] = ++timer;
}

bool anc(int u, int v)
{return tin[u] <= tin[v] && tout[u] >= tout[v];}

int lca(int u, int v)
{
    if (anc(u, v))  return u;
    if (anc(v, u))  return v;

    for (int i = l; i >= 0; --i)
        if (!is_anc(up[u][i], v))
            u = up[u][i];
 
    return up[u][0];
}
void pre()
{
    timer = 0;
    dfs(1,1);
    
}
