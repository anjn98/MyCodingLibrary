/*********************"ANJAN AGARWALA"************************
***************************@anjn98****************************/

//#define opti
#ifdef opti
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast,unroll-loops,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#endif

#include <bits/stdc++.h>
using namespace std;								/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;							*/


typedef long long int ll;
typedef unsigned long long int ull;
ll power(ll x,ll y,ll p){ll r=1; x=x%p; while(y){ if(y&1) r= r*x%p; y=y>>1; x=x*x%p; } return r; }
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define IO              ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define all(v)          v.begin(),v.end()
#define PR(a)           cout<<"("<<a<<")";
#define ED              cout<<'\n';
#define endl            '\n'
#define loop(j,a,n)     for(int j=a;j<=n;j++)
#define loop1(j,a,n)    for(int j=a;j>=n;j--)
#define fr1(j,n)        for(int j=0;j<n;j++)
#define fr(n)           for(int i=0;i<n;i++)
#define trav(x,s)       for(auto x:s)
#define pb              push_back
#define mp              make_pair
#define pii             pair<int,int>
#define pll             pair<long long int,long long int>
#define F               first
#define S               second 
#define binf            2000000000000000001
#define mod             1000000007

const int N=1e5+99,M=21;
set<int> g[N];
int ss[N],tin[N],tout[N],timer,dp[N][M],depth[N],tree[N],n,ans[N],par[N];


/******************PREPROCESS***********************/
void dfsp(int v,int p)
{
	dp[v][0]=p;tin[v]=++timer;
	for(int i=1;i<M;i++)dp[v][i]=dp[dp[v][i-1]][i-1];
	trav(x,g[v])
	{
		if(x==p) continue;		
		depth[x]=depth[v]+1;
		dfsp(x,v);	
	}	
	tout[v]=++timer;
}
bool isanc(int p,int v){return tin[p]<=tin[v] && tout[p]>=tout[v];}
int lca(int x,int y)
{
	if(isanc(x,y)) return x;	if(isanc(y,x)) return y;
	
	for(int i=M-1;i>=0;i--)
		if(!isanc(dp[x][i],y)) x=dp[x][i];
	return dp[x][0];
}
int distance(int x,int y){	return 	(depth[x]+depth[y]-2*depth[lca(x,y)])	;	}




/*------------------DECOMPOSITON---------------------*/
int sz;
void dfs1(int v,int p)
{
	ss[v]=1;sz++;
	trav(x,g[v]) if(x!=p){dfs1(x,v); 	ss[v]+=ss[x];}
}

int dfs2(int v,int p)
{
	trav(x,g[v])if(x!=p && ss[x]>(sz/2))
		return dfs2(x,v);
	return v;
}
void decompose(int v,int p)
{
		sz=0;	dfs1(v,v);
		int cet=dfs2(v,v);
		par[cet]=(p==-1)?cet:p;
		trav(x,g[cet])	{g[x].erase(cet);decompose(x,cet);}
		g[cet].clear();
}


/*------------------------QUERIES----------------------*/
void update(int x)
{
	int u=x;
	while(1)
	{
		ans[u]=min(ans[u],distance(u,x));
		if(u==par[u])	break;
		u=par[u];
	}
	
}
void query(int v)
{
	int res=mod,x=v;
	while(1)
	{
		res=min(res,distance(x,v)+ans[x]);
		if(x==par[x])break;
		x=par[x];
	}
	cout<<res<<endl;
}


int main()
{
	IO
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	#endif
	timer=0;int m,x,y;depth[1]=1;
	cin>>n>>m;
	fr(n-1)
	{
		int x,y;cin>>x>>y;
		g[x].insert(y);
		g[y].insert(x);
	}
	dfsp(1,1);	
	decompose(1,-1);
	memset(ans,mod,sizeof(ans));
	update(1);
	while(m--)
	{
		int t,x;	cin>>t>>x;
		if(t==1) update(x);
		else query(x);
	}


}









